#Create initial set of posts
config:
  target: 'https://scc-backend-4770147967.azurewebsites.net'
  plugins:
    metrics-by-endpoint: {}
  #  http:
  #    pool: 100    # set the maximum number of connections to server
  processor: "./test-utils.js"
  variables:
    metricsProcessEndpoint : "myProcessEndpoint"  # function used to aggregate endpoints for statistics
  phases:
    - name: "Warm up"    # WARM UP PHASE: duration: 20s, starting with 1 bew client/sec up to 5 new clients/sec
      duration: 10
      arrivalRate: 1
      rampTo: 5
    - name: "Main test"    # MAIN TESTS: duration: 120s, with 5 new clients/sec
      duration: 120         # NOTE: number of clients per second will depend on the complexity of your scenarios
      arrivalRate: 5       # you need to try a number that can be handled by the client


scenarios:
  # Normal user that reads post and sometimes replies to posts
  - name: "Random reader"
    weight: 10
    flow:
      - function: "startBrowse"
      - get:                           # get some initial page : last post in this case
          url: "/posts/frontpageall"
          afterResponse: "selectFromPostList"      # select some posts for later browsing
      - loop:                          # load the images from the post in the list
          - get:
              ifTrue: "hasNextimageid"
              url: "/images/{{ nextimageid }}"
              headers:
                Accept: image/*
              afterResponse: "getImageReply"
        whileTrue: "hasMoreInImageList"
      - loop:                          #Browse main loop                   
          - get:                        # get the thread for the next post (from the previous selected)
              ifTrue: "hasNextid"
              url: "/posts/{{ nextid }}/thread"
              afterResponse: "selectFromPostThread"   # select posts to browse next and decide whether to reply or like this post
          - loop:                                    # load the image for the main post
              - get:
                  ifTrue: "hasNextimageid"
                  url: "/images/{{ nextimageid }}"
                  headers:
                    Accept: image/*
                  afterResponse: "getImageReply"
            whileTrue: "hasMoreInImageList"
          - post:                                      # execute a like for the post
              ifTrue: "like"
              url: "/posts/{{ curid }}/setupvote"
              json:
                userId: "{{ sessionuser }}"
                subredditId: "{{ curcommunity }}"
          - function: "genNewPost"
          - post:                                     # submit an image for a reply
              ifTrue: "hasImage and reply"
              url: "/images"
              headers:
                Content-Type: application/octet-stream
                Accept: text/plain
              beforeRequest: "setNewPostImageBody"
              afterResponse: "genNewImageReply"
          - post:                                      # submit the post for a reply
              ifTrue: "reply"
              url: "/posts"
              headers:
                Accept: text/plain
              json:
                subreddit: "{{ curcommunity }}"
                opUsername: "{{ sessionuser }}"
                title: "Title"
                parentPost: "{{ curid }}"
                rootPost: "{{ curid }}"
                content: "{{ msg }}"
                isLink: "{{ hasImage }}"
              afterResponse: "genNewPostReply"
        whileTrue: "endBrowse"                          # continue browsing until deciding to stop

  - name: "Troll"
    weight: 1
    flow:
      - function: "startBrowse"
      - get:
          url: "/posts/frontpageall"
          afterResponse: "selectAllFromPostList"      # select all posts for replying to
      - loop:                                         # for each post
          - function: "genNewPost"
          - post:                                       # upload image
              ifTrue: "hasImage"
              url: "/images"
              headers:
                Content-Type: application/octet-stream
                Accept: text/plain
              beforeRequest: "setNewPostImageBody"
              afterResponse: "genNewImageReply"
          - post:                                       # upload reply
              url: "/posts"
              headers:
                Accept: text/plain
              json:
                subreddit: "{{ nextcommunity }}"
                opUsername: "{{ sessionuser }}"
                title: "Title"
                parentPost: "{{ nextid }}"
                rootPost: "{{ nextid }}"
                content: "{{ msg }}"
                isLink: "{{ hasImage }}"
              afterResponse: "genNewPostReply"
        whileTrue: "hasMoreInBrowseList"

  - name: 'Create root post'
    weight: 2
    flow:
      - function: "genNewPost"
      - post:
          url: "/images"
          headers:
            Content-Type: application/octet-stream
            Accept: text/plain
          beforeRequest: "setNewPostImageBody"
          afterResponse: "genNewImageReply"
          ifTrue: "hasImage"
      - post:
          url: "/posts"
          headers:
            Accept: text/plain
          json:
            subreddit: "{{ community }}"
            opUsername: "{{ creator }}"
            title: "Title"
            parentPost: ""
            rootPost: ""
            content: "{{ msg }}"
            isLink: "{{ hasImage }}"
          afterResponse: "genNewPostReply"
